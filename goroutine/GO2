// P1Q3

package main

import (
	"fmt"
)

// Function to check if a number is composite
func isComposite(n int) bool {
	if n <= 1 {
		return false
	}
	count := 0
	for i := 1; i <= n; i++ {
		if n%i == 0 {
			count++
		}
	}
	return count > 2
}

// Function to generate composite numbers and send them to a channel
func generateComposites(ch chan<- int) {
	for i := 2; i <= 100; i++ {
		if isComposite(i) {
			ch <- i
		}
	}
	close(ch)
}

// Function to calculate the square of numbers received from a channel and send them to another channel
func calculateSquares(compCh <-chan int, squareCh chan<- int) {
	for comp := range compCh {
		squareCh <- comp * comp
	}
	close(squareCh)
}

// Function to check if the number is even or odd and print "Pong" for even and "Ping" for odd
func checkEvenOdd(squareCh <-chan int) {
	for square := range squareCh {
		if square%2 == 0 {
			fmt.Println("Pong")
		} else {
			fmt.Println("Ping")
		}
	}
}

func main() {
	compCh := make(chan int)
	squareCh := make(chan int)

	go generateComposites(compCh)
	go calculateSquares(compCh, squareCh)
	checkEvenOdd(squareCh)
}
